# Runs a few integration tests against the installed compiler.
#
# Required env vars:
# - CI_OS

steps:

- bash: |
    set -ex
    cd ..
    echo 'void main() { import std.stdio; writefln("Hello world, %d bits", size_t.sizeof * 8); }' > hello.d
  displayName: Generate hello.d

- bash: |
    set -ex
    cd ..
    installed/bin/ldc2 hello.d -m64 -of=hello64 -link-defaultlib-shared
    ./hello64
    if [ "$CI_OS" = "linux" ]; then
      installed/bin/ldc2 hello.d -m32 -of=hello32 -link-defaultlib-shared
      ./hello32
    fi
  displayName: Run hello-world integration test with shared libs
  condition: and(succeeded(), ne(variables['CI_OS'], 'windows'))

- bash: |
    set -ex
    cd ..
    installed/bin/ldc2 hello.d -of=hello_thin -flto=thin -defaultlib=phobos2-ldc-lto,druntime-ldc-lto
    ./hello_thin
    # FIXME: full LTO fails on macOS
    if [ "$CI_OS" != "osx" ]; then
      installed/bin/ldc2 hello.d -of=hello_full -flto=full -defaultlib=phobos2-ldc-lto,druntime-ldc-lto
      ./hello_full
    fi
  displayName: Run hello-world integration test with LTO

- bash: |
    set -ex
    cd ..
    if [ "$CI_OS" = "windows" ]; then
      # Add ldc-jit.dll dir to PATH
      export PATH="$PWD/installed/lib:$PATH"
    fi
    installed/bin/ldc2 -enable-dynamic-compile -run $BUILD_SOURCESDIRECTORY/tests/dynamiccompile/array.d
  displayName: Run dynamic-compile integration test
